declare const _default: import("vue").DefineComponent<{
    text: {
        type: StringConstructor;
        required: true;
    };
    maxHeight: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    maxLines: {
        type: NumberConstructor;
        required: false;
    };
    expanded: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    location: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    ellipsis: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    autoResize: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}, (_ctx: any, _cache: any) => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("clamp-change" | "update:expanded")[], "clamp-change" | "update:expanded", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    text: {
        type: StringConstructor;
        required: true;
    };
    maxHeight: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    maxLines: {
        type: NumberConstructor;
        required: false;
    };
    expanded: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    location: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    ellipsis: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    autoResize: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
}>> & {
    "onClamp-change"?: ((...args: any[]) => any) | undefined;
    "onUpdate:expanded"?: ((...args: any[]) => any) | undefined;
}, {
    expanded: boolean;
    location: string;
    ellipsis: string;
    autoResize: boolean;
}>;
export default _default;
